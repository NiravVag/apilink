@model DTO.ExchangeRate.MatrixDataExport

<xls-sheet name="Currency Matrix">
    <table xls-begin="B:1" style="border-style:solid">
        <tr>
            <td style="font-weight:bold">Currency</td>
            <td>@Model.CurrencyTarget</td>
            <td></td>
            <td style="font-weight:bold">From</td>
            <td>@Model.FromDate</td>
            <td></td>
            <td style="font-weight:bold">To</td>
            <td>@Model.ToDate</td>
        </tr>
    </table>
    <table xls-begin="B:4" style="border-style:solid">
        <tr style="background-color:#f5f5f5;font-weight:bold;text-align:center">
            <th width="250px"></th>
            @foreach (var item in Model.Data)
            {
                <th>@item.Currency.CurrencyCode</th>
            }
        </tr>
        <tr>
            <td style="background-color:#f5f5f5">@Model.Data.First().Currency.CurrencyName</td>
            @foreach (var item in Model.Data)
            {
                <td style="@(Model.CurrencyTarget == item.Currency.CurrencyName ? "background-color:#71c7b2" : "")" xls-type="number" xls-format ="0.000" xls-ref="@item.Currency.CurrencyCode">@item.Value</td>
            }
        </tr>
        @for(int i = 1; i < Model.Data.Count(); i++)
        {
            <tr>
                <td style="background-color:#f5f5f5">@Model.Data.ElementAt(i).Currency.CurrencyName</td>
                @foreach (var subItem in Model.Data)
                {
                <td style="@(subItem.Currency.Id == Model.Data.ElementAt(i).Currency.Id ? "background-color:#71c7b2" : "")" xls-type="number" xls-format ="0.000"  xls-form="[@subItem.Currency.CurrencyCode]/[@Model.Data.ElementAt(i).Currency.CurrencyCode]">@string.Format("{0:0.000}", (Convert.ToDouble(subItem.Value) / Convert.ToDouble(Model.Data.ElementAt(i).Value)))</td>
                }
            </tr>
        }
    </table>
</xls-sheet>