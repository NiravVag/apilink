using DTO.Claim;
using DTO.CommonClass;
using DTO.Customer;
using DTO.CustomerPriceCard;
using DTO.Invoice;
using DTO.Kpi;
using DTO.Quotation;
using Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Contracts.Repositories
{
    public interface IInvoiceRepository : IRepository
    {
        Task<IEnumerable<CustomerPriceCardRepo>> GetPriceCardRuleList(InvoiceGenerateRequest requestDto);
        IQueryable<InvoiceBookingDetail> GetAllInvoiceBookingData();
        Task<List<InvoiceBookingFactoryDetails>> GetBookingFactoryDetails(IEnumerable<int> factoryIds);
        Task<List<CustomerPriceBookingProducts>> GetBookingProductDetails(int bookingId);
        Task<IEnumerable<TravelMatrixSearch>> GetMatrixData(QuotationMatrixRequest matrixRequest);
        Task<IEnumerable<InvoiceBankTax>> GetTaxDetails(int bankId, DateTime maxInspectionDate, DateTime minInspectionDate);
        Task<int> GetNumberOfQCPerDayByFactory(int factoryId, DateTime serviceDate, List<int> bookingIds);
        Task<string> GetInvoiceNumber(string prefix);
        Task<InvoiceBaseDetailRepo> GetInvoiceBaseDetails(string invoiceNo);
        Task<List<CommonDataSource>> GetInvoicePaymentStatus();
        Task<List<InvoiceTransactionDetailRepo>> GetInvoiceTransactionDetails(string invoiceNo);
        Task<List<InvoiceBookingQuantityDetails>> GetBookingQuantityDetails(IEnumerable<int> bookingIds);
        Task<List<InvoiceBookingQuotation>> GetBookingQuotationDetails(IEnumerable<int> bookingIds);
        Task<List<InvoiceBookingServiceTypes>> GetBookingServiceTypes(IEnumerable<int> bookingIds);
        Task<List<PriceInvoiceRequest>> GetInvoiceRequestAddressByBrand(IEnumerable<int?> RuleIds, IEnumerable<int> brandIdList);
        Task<List<PriceInvoiceRequest>> GetInvoiceRequestAddressByDepartment(IEnumerable<int?> RuleIds, IEnumerable<int> DepartmentIds);
        Task<List<PriceInvoiceRequest>> GetInvoiceRequestAddressByBuyer(IEnumerable<int?> RuleIds, IEnumerable<int> BuyerIds);
        Task<List<int>> GetInspectionInvoiceOrderIds(InvoiceGenerateRequest requestDto);
        Task<List<int>> GetTravelExpenseInvoiceOrderIds(InvoiceGenerateRequest requestDto);
        Task<List<InvAutTranDetail>> GetInvoiceOrdersSameFacIdAndInspectionDate(int customerId, int factoryId, DateTime inspectionDate);
        Task<List<QuotationInspectionTravelCost>> GetQuotationDataByBookingNo(int bookingNo);
        Task<InvoiceBookingMoreInfo> GetInvoiceBookingMoreInfo(int bookingId);
        Task<List<InvAutTranDetail>> GetInvoiceListById(IEnumerable<int> invoiceIds);
        Task<InvAutTranDetail> GetInvoiceById(int invoiceId);
        DateTime GetInvoiceBookingLastDate(IEnumerable<int?> bookingIds);
        Task<bool> CheckInvoiceNumberExist(string invoiceNumber);
        Task<List<InvoiceBookingProductsData>> GetProductListByBooking(IEnumerable<int> bookingIds);
        IQueryable<InvAutTranDetail> GetInvoiceDetailsByServiceType(int serviceTypeId);
        Task<IEnumerable<InvoiceSummaryItem>> GetInvoiceDetailsByInvoiceNo(List<string> invoiceIdList);
        Task<List<InvAutTranDetail>> GetInvoice(string invoiceId);
        Task<List<CommonDataSource>> GetInvoiceOffice();
        Task<List<InvoiceBookingProducts>> GetInvoiceBookingProducts(IEnumerable<int> bookingIds);
        Task<List<CustomerPriceBookingProducts>> GetProductDetailsByBookingList(List<int> bookingIdList);
        Task<List<CommonDataSource>> GetInvoiceStatus();
        IQueryable<InvoiceNewBookingDetailRepo> GetNewInvoiceBookingData();
        Task<int> SaveInvoiceStatusLog(List<InvAutTranStatusLog> entity);
        Task<List<KPITemplate>> GetTemplateList(int typeId);
        Task<List<int>> GetActiveInvoiceInspectionIdList(List<int> bookingIdList);
        Task<List<QuotationInspectionBilledTo>> GetQuotationDataByBookingNoList(IEnumerable<int> bookingNoList);
        Task<IEnumerable<InvExfTransaction>> GetBookingActiveExtraFeeReference(List<int?> bookingIds, int billingTo, int currencyId, int bankId);
        Task<IEnumerable<InvExfTransaction>> GetAuditActiveExtraFeeReference(List<int?> auditIds, int billingTo, int currencyId, int bankId);
        Task<IEnumerable<InvoiceExtraFeeItem>> GetInvoiceExtraFeeItem(List<int> invoiceNoList);
        Task<List<int>> GetTravelExpenseInvoiceAuditOrderIds(InvoiceGenerateRequest requestDto);
        Task<List<int>> GetAuditInvoiceOrderIds(InvoiceGenerateRequest requestDto);
        IQueryable<InvoiceBookingDetail> GetAllInvoiceAuditData();
        Task<List<QuotationAuditBilledTo>> GetQuotationDataByAuditNoList(IEnumerable<int> auditNoList);
        Task<List<QuotationInspectionTravelCost>> GetQuotationDataByAuditNo(int auditNo);
        DateTime GetInvoiceAuditLastDate(IEnumerable<int?> auditIds);
        Task<List<InvoiceTransactionDetailRepo>> GetAuditInvoiceTransactionDetails(string invoiceNo);
        IQueryable<InvoiceSummaryItem> GetAuditInvoiceDetails();
        Task<IEnumerable<InvoiceSummaryItem>> GetAuditInvoiceDetailsByInvoiceNo(List<string> invoiceNoList);
        Task<InvoiceBaseDetailRepo> GetAuditInvoiceBaseDetails(string invoiceNo);
        Task<List<InvoiceBookingQuotation>> GetAuditBookingQuotationDetails(IEnumerable<int> bookingIds);
        Task<List<InvoiceBookingServiceTypes>> GetAuditBookingServiceTypes(IEnumerable<int> bookingIds);
        IQueryable<InvoiceNewBookingDetailRepo> GetNewInvoiceAuditBookingData();
        Task<List<int>> GetActiveInvoiceAuditIdList(List<int> bookingIdList);
        Task<List<QuotationBooking>> GetQuotationInspectionInvoiceOrderIds(List<int> bookingList);
        Task<List<QuotationInspectionTravelCost>> GetQuotationDataByBookingIdsList(List<int> bookingNo);
        Task<List<QuotationBooking>> GetQuotationAuditInvoiceOrderIds(List<int> bookingIdList);
        Task<List<QuotationInspectionTravelCost>> GetQuotationDataByAuditList(List<int> auditNo);
        Task<List<InvAutTranDetail>> GetInvoiceListByBookingId(IEnumerable<int> bookingIds);
        IQueryable<InvoiceSummaryItem> GetQueryableInvoiceDetailsByInvoiceNo(IQueryable<string> invoiceNoList);
        IQueryable<InvoiceSummaryItem> GetQueryableAuditInvoiceDetailsByInvoiceNo(IQueryable<string> invoiceNoList);
        Task<IEnumerable<InvoiceExtraFeeItem>> GetQueryableInvoiceExtraFeeItem(IQueryable<int> invoiceNoList);
        IQueryable<int> GetQueryableInvoiceBookingNo(IQueryable<string> invoiceNoList);
        IQueryable<int> GetQueryableInvoiceAuditNo(IQueryable<string> invoiceNoList);
        Task<List<InvAutTranDetail>> GetInvoiceListByAuditId(IEnumerable<int> bookingIds);
        Task<List<InvoiceBookingQuotation>> GetQueryableBookingQuotationDetails(List<int> bookingIds);
        Task<List<InvoiceBookingQuotation>> GetQueryableAuditBookingQuotationDetails(IQueryable<int> bookingIds);
        Task<List<CommonPriceCardDataSource>> GetPrContacts(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrHolidayType(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrPriceCategory(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrBuyer(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrBrand(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrDepartment(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrProvince(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrCountries(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrServiceTypes(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrProductCategories(List<int> priceCardIdList);
        Task<List<CommonPriceCardDataSource>> GetPrSuppliers(List<int> priceCardIdList);
        Task<List<InvAutTranContactDetail>> GetInvoiceContactDetails(int invoiceId);
        Task<List<InvoiceRequestContactId>> GetInvoiceRequestContacts(IEnumerable<int> InvoiceRequestIds);
        Task<List<PriceSubCategory>> GetPrSubCategoryList(List<int> priceCardIdList);
        Task<List<PriceSpecialRule>> GetPrSpecialRules(List<int> priceCardIdList);
        Task<InvoiceDataForNewBooking> GetInvoiceDetailsbyInvoiceNumber(string invoiceNumber);
        Task<List<CommonPriceCardDataSource>> GetPrProductSubCategories(List<int> priceCardIdList);
        Task<List<CreditNoteInvoiceDetails>> GetInvoiceDetailByBookingIds(List<int> bookingIds);
        Task<IEnumerable<BankTaxData>> GetBankTaxDetails(List<int> bankIdList);
        Task<List<FactoryContact>> GetFactoryContactIdList(List<int> factoryIds);
        Task<List<SupplierAddressDetails>> GetSupplierAddressList(List<int> supplierIds);
        Task<List<SupplierContact>> GetSupplierContactIdList(List<int> supplierIds);
        Task<IEnumerable<BankTaxData>> GetBankValidTaxDetails(List<int> bankIdList);
        Task<List<string>> getInvoicePdfFiles(List<string> InvoiceNumbers);
        Task<List<InvTranFile>> GetInvoiceTransactionFiles(int invoiceId, int fileType);
        Task<List<InvAutTranDetail>> GetInvoiceListByBookingIds(IEnumerable<int> bookingIds);
        Task<List<CommonPriceCardDataSource>> GetPrCity(List<int> priceCardIdList);
    }
}
